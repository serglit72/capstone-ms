# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  environment:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:2022.06
        auth:
          username: serglit72
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      
      - run:
          name: "Install Python"
          command: | 
            sudo apt update
            sudo apt install python3.9
            sudo apt install python3-pip
            sudo apt install python3-venv curl wget
            python3 --version
            make install
      - setup_remote_docker: 
          docker_layer_caching: true
      - run:
          docker build -t flask-app .
          ./upload_to_dockerhub.sh      
      # - setup_remote_docker:
      #     version: 20.10.18
      #     command: |
              
      # - run: 
      #     name: "Creating virtual enviromment" 
      #     command: |
      #       pwd && ls -la
      #       python3 -m venv .capstone
      #       source .capstone/bin/activate 
      #       docker --version > my_test_file.txt
             
      # - run:
      #     name: "Download hadolint"
      #     command: |
      #       pip install --upgrade pip
      #       pip install -r requirements.txt
      #       # This is linter for Dockerfiles
      #       wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
      #       chmod +x hadolint && ./hadolint Dockerfile
            
      # - run: 
      #     name: "Test Python scripts using lints"
      #     command: |
      #       ./pylint --disable=R,C,W1203,W1202 app.py 
### This is a linter for Python source code linter: https://www.pylint.org/
### This should be run from inside a virtualenv
      # - run:
      #     name: "Add GPG key for the official Docker repo to the Ubuntu system"
      #     command: |
      #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  
      #       sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      
      # - run:
      #     name: "Docker building an image"
      #     command: |
      #       sudo docker build -t flask-app .
      #       ./upload_to_dockerhub.sh         


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  capstone-ms:
    jobs:
      - environment
